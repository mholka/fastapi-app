name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  full-pipeline:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # ---------- PYTHON BUILD / LINT ----------
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint app
      run: |
        flake8 app --max-line-length=100

    # ---------- DOCKER BUILD / PUSH ----------
    - name: Build and Push Docker Image
      run: |
        docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

    # ---------- TERRAFORM AKS + ARGO + PROM ----------
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan

    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve

    # ---------- DEPLOY VIA HELM ----------
    - name: Set up kubectl
      uses: azure/aks-set-context@v3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ secrets.CLUSTER_NAME }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}

    - name: Set up Helm
      uses: azure/setup-helm@v3

    - name: Deploy Helm Chart
      run: |
        helm upgrade --install fastapi-app ./helm/fastapi \
          --namespace default \
          --create-namespace \
          --set image.repository=${{ secrets.DOCKER_USERNAME }}/fastapi-app \
          --set image.tag=latest \
          --wait
